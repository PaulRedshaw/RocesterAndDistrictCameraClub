@model Radcc.Entities.Event

@{
    ViewBag.Title = "Create";
}

<h2>Create new event</h2>
 
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
     
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2", id="eventTypeSelector"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EventTypeId, new SelectList(ViewBag.EventTypeId, "Value", "Text"), "Select a meeting type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control datepicker" } })

                @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdditionalComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdditionalComment, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $(function () {
       
        $('#eventTypeSelector').selectize({
            create: true,
            sortField: 'text'
        });
    });

</script>
